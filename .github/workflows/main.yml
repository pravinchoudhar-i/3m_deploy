name: CI/CD Pipeline

on: [push]

jobs:
  publish:
    runs-on: ubuntu-latest
    name: Publish Docker Image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          TAG_LATEST=${{ secrets.REGISTRY_URL }}/${{ github.repository }}:latest
          TAG_COMMIT=${{ secrets.REGISTRY_URL }}/${{ github.repository }}:${{ github.sha }}
          docker build -t $TAG_COMMIT -t $TAG_LATEST .
          docker push $TAG_COMMIT
          docker push $TAG_LATEST

  test:
    runs-on: ubuntu-latest
    name: Test Application
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.5

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django
          pip install -r 3m-usermanagement/usermanagement/requirements.txt

      - name: Run tests
        run: |
          python 3m-usermanagement/usermanagement/requirements.txt
          echo "Checking the server..."

  deploy:
    runs-on: ubuntu-latest
    name: Deploy Application
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ID_RSA }}

      - name: Deploy to Server
        run: |
          TAG_COMMIT=${{ secrets.REGISTRY_URL }}/${{ github.repository }}:${{ github.sha }}
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker login -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASS }} ${{ secrets.REGISTRY_URL }}"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker pull $TAG_COMMIT"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker container rm -f 3m_app || true"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker run -d -p 8040:8000 --name 3m_app $TAG_COMMIT"
