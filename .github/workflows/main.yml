name: Django CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip
          pip install -r 3m-usermanagement/usermanagement/requirements.txt

      - name: Run tests
        run: |
          python 3m-usermanagement/usermanagement/manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test
    env:
      REGISTRY: 'docker.io'  # Docker Hub as default
      REPO_NAME: 'pravin290/3m_deploy'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -f 3m-usermanagement/usermanagement/Dockerfile -t ${{ env.REPO_NAME }}:${{ github.ref_name }}-latest -t ${{ env.REPO_NAME }}:${{ github.ref_name }}-${{ github.sha }} .

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Push Docker image
        run: |
          docker push ${{ env.REPO_NAME }}:${{ github.ref_name }}-latest
          docker push ${{ env.REPO_NAME }}:${{ github.ref_name }}-${{ github.sha }}

  deploy:
    if: github.ref_name == 'development'
    runs-on: ubuntu-latest
    needs: build  # Ensure deploy job runs only if build job succeeds
    env:
      REPO_NAME: 'pravin290/3m_deploy'

    steps:
      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ID_RSA }}

      - name: Print environment variables for debugging
        run: |
          echo "REPO_NAME: ${{ env.REPO_NAME }}"
          echo "TAG_LATEST: ${{ env.REPO_NAME }}:${{ github.ref_name }}-latest"
          echo "TAG_COMMIT: ${{ env.REPO_NAME }}:${{ github.ref_name }}-${{ github.sha }}"

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker pull ${{ env.REPO_NAME }}:${{ github.ref_name }}-${{ github.sha }}"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker container rm -f usermanagement || true"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker run -d -p 8040:8000 --name usermanagement ${{ env.REPO_NAME }}:${{ github.ref_name }}-${{ github.sha }}"
