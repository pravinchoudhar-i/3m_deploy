name: Django CI

on:
  push:
    branches:
      - development

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip
          pip install -r 3m-usermanagement/usermanagement/requirements.txt

      - name: Run tests
        run: |
          python 3m-usermanagement/usermanagement/manage.py test

  deploy:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Set permissions for SSH key
        run: |
          echo "${{ secrets.ID_RSA }}" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

      - name: Ensure SSH directory exists
        run: mkdir -p ~/.ssh

      - name: Bypass SSH Host Key Checking
        run: |
          echo -e "Host *\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

      - name: List local files before syncing
        run: |
          echo "Local files:"
          ls -la

      - name: Copy files to server
        run: |
          rsync -avz --delete --no-perms --no-owner --no-group -e "ssh -i /tmp/id_rsa -p ${{ secrets.SERVER_PORT }} -o StrictHostKeyChecking=no" . ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/tw-usermanagement-practice/

      - name: List files on server after rsync
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "ls -la /home/tw-usermanagement-practice"

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd /home/tw-usermanagement-practice || exit 1
            ls -l 3m-usermanagement/usermanagement || exit 1
            docker build -f 3m-usermanagement/usermanagement/Dockerfile -t usermanagement_app /home/tw-usermanagement-practice/3m-usermanagement/usermanagement
            docker stop usermanagement || true
            docker rm usermanagement || true
            docker run -d -p 8040:8000 --name usermanagement usermanagement_app || exit 1
          EOF
