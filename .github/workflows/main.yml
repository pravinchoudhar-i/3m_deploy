name: Django CI

on: [push]
  # push:
  #   branches: [ "development" ]
  # pull_request:
  #   branches: [ "development" ]
env:
  TAG_LATEST: ${{ secrets.CI_REGISTRY_IMAGE }}/${{ github.ref_name }}:latest
  TAG_COMMIT: ${{ secrets.CI_REGISTRY_IMAGE }}/${{ github.ref_name }}:${{ github.sha }}

jobs:
  build:
    if : github.ref_name != 'development'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.5]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r 3m-usermanagement/usermanagement/requirements.txt
        
  deploy:
    if : github.ref_name == 'development'
    runs-on: ubuntu-latest
    # if: github.ref == 'development'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ID_RSA }}

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: gitlab-ci-token
          password: ${{ secrets.CI_JOB_TOKEN }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker pull $TAG_COMMIT"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker container rm -f 3m_app || true"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker run -d -p 8040:8000 --name 3m_app $TAG_COMMIT"
