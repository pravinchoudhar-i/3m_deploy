"""
Django settings for usermanagement project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
# Important for library update
import django
from django.utils.encoding import force_str,smart_str
django.utils.encoding.force_text = force_str
django.utils.encoding.smart_text = smart_str
# --------------------------------------------------


from pathlib import Path
from decouple import config

# import cloudinary
# import cloudinary.uploader
# import cloudinary.api

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3ctrsxbwa^33h86k!n_3z75kwrs1%i_(0aobwk8_rfem0=ep-e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#This setting is for sending Email
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_HOST_USER = config('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_BACKEND= 'django.core.mail.backends.smtp.EmailBackend'

# ALLOWED_HOSTS = ['localhost','178.128.196.165','usermanagement-test.elorca.com']
ALLOWED_HOSTS = ['localhost','127.0.0.1','usermanagement-test.elorca.com']

CSRF_TRUSTED_ORIGINS = ['https://usermanagement-test.elorca.com','https://*.127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'storages',
    'users',
    'analytics',
    'reports'
    # 'app_logs'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'usermanagement.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'users.context_processor.privileges',
                'reports.context_processor.reportsManagement',
            ],
            'builtins': [
                'users.templatetags.custom_tags',
            ]
        },
    },
]

WSGI_APPLICATION = 'usermanagement.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
                'ENGINE': 'django.db.backends.mysql',
                'NAME': config('DATABASE_NAME'),
                'USER': config('DATABASE_USER'),
                'PASSWORD': config('DATABASE_PASSWORD'),
                'HOST': config('DATABASE_HOST'),
                'PORT': 3306,
                'OPTIONS': {
                    "init_command": "SET foreign_key_checks = 0;"           
                }
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# settings for authenticating user through email or mobile
AUTHENTICATION_BACKENDS = [   
    'usermanagement.backends.EmailAuthBackend',
    
    ]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True

PHONENUMBER_DB_FORMAT = 'INTERNATIONAL'



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

AWS_ACCESS_KEY_ID = config('STATIC_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = config('STATIC_SECRET_KEY')
AWS_S3_REGION_NAME = config('AWS_REGION')
AWS_STORAGE_BUCKET_NAME = config('STATIC_BUCKET_NAME')
AWS_S3_CUSTOM_DOMAIN =  f'{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com' 
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}
AWS_LOCATION = 'static'
AWS_DEFAULT_ACL = None
STATIC_URL =  'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
STATIC_ROOT = 'static'
STATICFILES_STORAGE = 'usermanagement.storage_backends.StaticStorage'
PUBLIC_MEDIA_LOCATION = 'media'
MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
DEFAULT_FILE_STORAGE = 'usermanagement.storage_backends.PublicMediaStorage'


# cloudinary.config( 
#   cloud_name = "diebln7ci", 
#   api_key = "633498942221168", 
#   api_secret = "mOAyHJnyIfFFT-R5WJvG9FM1VyY",
#   secure = True
# )

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = 'admin-login'


